###################  spring配置  ###################
###################  应用服务名称  ###################
spring:
  application:
    name: spring-cloud-single-eureka
  profiles:
      active: dev
###################  项目启动端口  ###################
server:
  port: 6080

#####################################################################
########################  security 配置  ##########################
#####################################################################
security:
  basic:
    enabled: true #开启认证
  user:
    name: admin
    password: pwd666
#####################################################################
########################  eureka 配置  ##########################
#####################################################################
#默认设置，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册
eureka:
  client:
    register-with-eureka: false #表示是否将自己注册到Eureka Server，默认true
    fetch-registry: false #表示是否从Eureka Server获取注册信息，默认true
    serviceUrl:
      defaultZone: http://localhost:${server.port}/eureka/ #设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔。







#####################################################################
########################  swagger2 开启开关  ##########################
#####################################################################
swagger:
  enable: true # 是否开启 swagger 调试  true 开启，false 关闭

#####################################################################
########################  特殊校验开启开关  ##########################
#####################################################################
specialValidator:
  enable: true # 是否开启 特殊校验 调试  true 开启，false 关闭

#####################################################################
########################  多数据源 开启开关  ##########################
#####################################################################
xncoding:
  muti-datasource-open: true #是否开启多数据源(true/false)

#####################################################################
########################  定时任务 开启开关  ##########################
#####################################################################
timedTask:
  job-cheduleConfig-open: false #是否开启定时任务(true/false)

###################  mybatis-plus配置  ###################
mybatis-plus:
  mapper-locations: classpath*:cn/whs/jwt/modules/dao/mappings/*.xml
  typeAliasesPackage: cn.whs.jwt.modules.entity
  global-config:
    id-type: 0  # 0:数据库ID自增   1:用户输入id  2:全局唯一id(IdWorker)  3:全局唯一ID(uuid)
    db-column-underline: false
    refresh-mapper: true
    logic-delete-value: 0
    logic-not-delete-value: 1
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true #配置的缓存的全局开关
    lazyLoadingEnabled: true #延时加载的开关
    multipleResultSetsEnabled: true #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性

---

#####################################################################
########################  开发环境profile  ##########################
#####################################################################
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spring_boot?serverTimezone=Asia/Shanghai
    username: root
    password: 666
    db-name: spring_boot
    filters: log4j,wall,mergeStat
    redis:
        host: 127.0.0.1
        password: 666
        port: 6379
        pool:
          max-idle: 100
          min-idle: 1
          max-active: 1000
          max-wait: -1
  data:
      mongodb:
        uri: mongodb://whs:pwd66@localhost:27017/spring_boot
#多数据源
biz:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spring_boot_biz?serverTimezone=Asia/Shanghai
    username: root
    password: 666

#####################################################################
########################  写入日志  ##########################
#####################################################################

logging:
  level.root: info
  level.cn.whs.jwt: debug
  file: G:/mylog/spring-boot.log


